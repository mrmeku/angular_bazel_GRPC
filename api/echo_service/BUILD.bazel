load("@angular//:index.bzl", "ng_module")
load("@grpc_ecosystem_grpc_gateway//protoc-gen-swagger:defs.bzl", "protoc_gen_swagger")
load("//api:defs.bzl", "swagger_gen")
load("@io_bazel_rules_go//go:def.bzl", "go_library")
load("@io_bazel_rules_go//proto:def.bzl", "go_proto_library")

package(default_visibility = ["//visibility:public"])

proto_library(
    name = "echo_service",
    srcs = ["echo_service.proto"],
    deps = [
        "@com_github_googleapis_googleapis//google/api:api_proto",
                "@com_google_protobuf//:duration_proto",
        "@com_google_protobuf//:empty_proto",
        "@com_google_protobuf//:timestamp_proto",
        "@com_google_protobuf//:wrappers_proto",
        ],
)

go_proto_library(
    name = "echo_service_go_proto",
    compilers = [
        "@io_bazel_rules_go//proto:go_grpc",
        "@grpc_ecosystem_grpc_gateway//protoc-gen-grpc-gateway:go_gen_grpc_gateway",
    ],
    importpath = "angular_bazel_example/api/echo_service",
    proto = ":echo_service",
    deps = [
        "@grpc_ecosystem_grpc_gateway//protoc-gen-swagger/options:go_default_library",
        "@com_github_googleapis_googleapis//google/api:go_default_library",
    ],
)

go_library(
    name = "go_default_library",
    embed = [":echo_service_go_proto"],
    importpath = "angular_bazel_example/api/echo_service",
    deps = [
    ]
)

protoc_gen_swagger(
    name = "echo_service_gen_swagger",
    proto = ":echo_service",
)

swagger_gen(
    name = "echo_service_typescript_angular",
    spec = ":echo_service_gen_swagger",
    language = "typescript-angular",
    additional_properties = "ngVersion=6",
    outs = [
        "api.module.ts",
        "api/api.ts",
        "model/examplepbSimpleMessage.ts",
        "api/echoService.service.ts",
        "configuration.ts",
        "encoder.ts",
        "index.ts",
        "model/models.ts",
        "variables.ts",
    ],
)

ng_module(
    name = "echo_service_ng_module",
    srcs = [":echo_service_typescript_angular"],
    deps = ["@rxjs"],
    tsconfig = "//api:api.tsconfig.json"
)
